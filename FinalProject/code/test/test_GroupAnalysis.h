#ifndef TEST_GROUPANALYSIS_H
#define TEST_GROUPANALYSIS_H
#include "GroupAnalysis.h"
#include "api.h"
#include <stdlib.h>

void test_arr2(int* arr, int*arr2, int id){
    TEST_CHECK(arr[0]==arr2[0]);
    TEST_MSG("ID %d [Number of Groups] Ans: %d; Got %d", id, arr[0], arr2[0]);
    TEST_CHECK(arr[1]==arr2[1]);
    TEST_MSG("ID %d [Size of largest Group] Ans: %d; Got %d", id, arr[1], arr2[1]);
}

void test_data_GA(void){
    int num_mail;
    mail* mails;
    get_mails("test/data/test.in", &mails, &num_mail);
    //Data

    //Length of IDS
    int len0 = 43;
    int len2 = 246;
    int len3 = 154;
    int len9 = 82;
    int len11 = 109;
    int len14 = 22;
    // IDs
    int mids0[] = {131,7972,385,2082,5116,8823,697,3353,8353,785,2936,8223,2486,2831,8594,3323,3445,8721,4527,8626,5808,8318,2067,1832,5141,5488,5461,5928,8395,4236,8717,9805,3563,9630,2875,3165,7199,7446,4316,8404,60,7659,8929};
    int mids2[] = {2796,3919,831,5185,7622,5877,5302,9225,3418,1303,2027,972,3091,3682,262,1602,5116,2449,642,3174,9749,4909,6278,5539,4963,181,9121,4254,3304,1008,8584,3774,4388,8941,1408,1215,5881,5225,4694,7928,5409,307,7756,7157,5204,6736,7372,9939,4582,9790,4068,5262,4937,498,1418,1941,6132,8045,2232,1736,6139,243,2915,8894,9954,4263,3736,8521,3456,8319,699,2278,732,8592,9854,5752,1300,9673,5690,5919,2955,3428,6100,1389,7560,2668,908,4038,101,4385,9903,8852,5184,5158,1399,6758,7911,5176,1881,7952,8150,1653,991,1870,1295,6298,7164,495,5216,5438,7062,3594,126,9743,3237,4830,9845,1742,1155,6311,3664,1807,653,656,7217,8938,2125,784,742,509,7495,6419,1864,9188,1430,7159,573,8034,6949,419,2053,6495,3424,7092,3661,2625,5847,8312,3587,1746,4620,9112,8411,5062,9885,5647,6110,4941,8334,4529,121,6381,4322,1428,5360,3910,9251,6271,7941,5094,3813,235,8601,3120,274,6462,3728,9151,1362,617,8671,3074,6220,4993,9791,3152,260,4326,5927,167,8487,8175,5623,555,4275,5867,6539,7162,723,1414,1463,5279,9714,646,7411,758,9766,452,5240,8272,9968,8328,1815,6953,6533,669,7149,2469,6860,2473,4803,8232,6137,3921,9337,5742,2229,930,3485,7997,8480,5038,6404,1829,9272,1102,5775,7991,6157,6566,5078,8700,584,6663,1690,3493};
    int mids3[] = {8422,9478,1286,710,9070,6317,6013,7262,2523,8053,4416,6842,4029,6723,8391,7197,9937,3619,1095,9649,7825,2594,7954,240,8537,4782,8781,6303,943,5875,2823,7675,1438,5452,2696,348,3460,9559,6651,46,2365,6281,9446,3461,5267,1538,2950,3582,4214,1679,3665,2330,8618,7888,4376,9616,2682,2656,7788,4479,1159,2201,4711,7375,5430,4110,6738,7395,5746,2879,3556,2679,9095,5796,242,3909,3713,5503,4564,4355,4279,5061,1870,4284,8980,885,9448,5146,4392,3530,9488,116,707,3040,6819,4923,7623,2145,4162,4529,7667,6876,6132,5762,5130,1321,9709,8966,8749,8195,7944,2736,8906,2705,4715,3466,8043,5125,9208,5059,6593,2420,7225,3757,4724,9134,8595,6676,7555,3780,5632,5142,6078,8884,613,6921,5210,3657,9885,864,5912,6294,1435,1018,1863,1232,758,1169,5793,5481,6115,5412,7160,8836};
    int mids9[] = {4203,1679,2230,7511,325,3729,8487,6459,3133,5795,3279,1576,1203,5701,671,2049,5417,4475,1300,7133,1862,9150,3635,3577,8288,2814,6486,1152,693,6006,4723,8224,8655,7926,4571,4290,6580,7480,4191,6117,3388,2512,5518,4559,8067,2568,7194,876,2908,1571,8948,883,8641,7457,9281,7021,1974,584,4314,2382,4524,8914,7999,8845,9649,4331,1884,1052,5393,3696,98,4866,1140,6618,2647,2654,3728,4981,5134,482,324,57};
    int mids11[] = {2335,7102,9026,7649,9840,3422,7018,4308,1394,6106,2687,8996,5076,1059,7229,8872,6583,40,1113,3254,6905,2514,3324,7632,7623,5817,190,4868,6,2612,6271,9409,5628,1716,4934,6193,3848,6813,2086,4663,3860,730,1308,247,2174,5035,5786,4941,2092,8912,2970,5345,1326,9021,8535,5235,9856,7619,5357,7437,5960,6883,8666,723,5315,1737,7226,7217,501,3318,9785,1053,5760,5028,414,4833,8627,9408,1182,2026,5732,831,3299,4069,1125,3617,403,8863,9313,4681,80,5922,6968,9582,6924,8526,8415,6068,4033,7846,5730,9371,5214,5219,5385,5990,4208,9312,9865};
    int mids14[] = {8954,4419,6078,4265,8587,9369,666,782,1385,8891,4304,8153,3585,6306,5829,9794,2952,386,6689,6476,477,3326};
    //ANS [from test.out]
    int ans0[] = {38,3 };
    int ans2[] = {76,58 };
    int ans3[] = {66,17};
    int ans9[] = {57,4 };
    int ans11[] = {65,7 };
    int ans14[] = {22,2 };
    //Check data
    TEST_CHECK(sizeof(mids0)/sizeof(mids0[0]) == len0);
    TEST_CHECK(sizeof(mids2)/sizeof(mids2[0]) == len2);
    TEST_CHECK(sizeof(mids3)/sizeof(mids3[0]) == len3);
    TEST_CHECK(sizeof(mids9)/sizeof(mids9[0]) == len9);
    TEST_CHECK(sizeof(mids11)/sizeof(mids11[0]) == len11);
    TEST_CHECK(sizeof(mids14)/sizeof(mids14[0]) == len14);



    //Problem
    int* list = (int*)malloc(sizeof(int)*10000);
    int nlist = 0;


    //Test sets
    answer_GroupAnalysis(mids0, len0, mails, list, &nlist); 
    test_arr2(ans0, list,0);   

    answer_GroupAnalysis(mids2, len2, mails, list, &nlist); 
    test_arr2(ans2, list,2); 

    answer_GroupAnalysis(mids3, len3, mails, list, &nlist); 
    test_arr2(ans3, list,3); 

    answer_GroupAnalysis(mids9, len9, mails, list, &nlist); 
    test_arr2(ans9, list,9); 

    answer_GroupAnalysis(mids11, len11, mails, list, &nlist); 
    test_arr2(ans11, list,11); 

    answer_GroupAnalysis(mids14, len14, mails, list, &nlist); 
    test_arr2(ans14, list,14); 

    //Memory Test
    int mid[MAX_N_MAIL];
    for(int i=0;i<MAX_N_MAIL;i++){
        mid[i] = i;
    }
    answer_GroupAnalysis(mid, 10000, mails, list, &nlist); 


    //Garbage
    free(mails);
    free(list);
}   

#endif